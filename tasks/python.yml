---

- import_tasks: install.deb.yml
  when: ansible_os_family == 'Debian'

- import_tasks: install.yum.yml
  when: ansible_os_family == 'RedHat'

- file: state=directory name=/usr/share/python

- name: Install pip - pt. 1
  copy: src=get-pip.py dest=/usr/share/python/get-pip.py

- name: Install pip - pt. 2
  shell: "{{python_bin}}{{item}} /usr/share/python/get-pip.py creates={{python_pkg_bin}}/pip{{item}}"
  with_items: "{{ python_versions }}"
  register: python_pip_installed
  changed_when: false
  become: yes

- name: Update tools
  pip: name="setuptools virtualenv" state=latest executable=pip{{item.item}}
  environment:
    PATH: "/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin"
  when: item.changed
  with_items: "{{ python_pip_installed.results }}"

- name: Install global python packages
  pip: name="{{python_install|join(' ')}}" executable={{python_pkg_bin}}/pip{{item}}
  when: python_install
  with_items: "{{ python_versions }}"

- name: Install virtualenv
  pip: name="virtualenv" executable={{python_pkg_bin}}/pip{{item}}
  when: not( (python_virtualenvs is undefined) or (python_virtualenvs is none) or (python_virtualenvs | trim == '') )
  with_items: "{{ python_versions }}"

- name: Setup virtualenvs
  pip:
    virtualenv: "{{ item.path }}"
    virtualenv_python: "{{ item.python|default('python') }}"
    virtualenv_site_packages: false
  with_items: "{{ python_virtualenvs }}"
  tags:
    - venv
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
  when: "python_virtualenv_user is not defined"

- name: Setup virtualenvs for specific user
  pip:
    virtualenv: "{{ item.path }}"
    virtualenv_python: "{{ item.python|default('python') }}"
    virtualenv_site_packages: false
  with_items: "{{ python_virtualenvs }}"
  tags:
    - venv
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
  become_user: "{{ item.user|default(python_virtualenv_user) }}"
  when: "python_virtualenv_user is defined"
